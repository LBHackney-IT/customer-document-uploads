version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:12.13

    working_directory: ~/repo

jobs:
  build:
    executor: node

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            sudo apt-get update && sudo apt-get install default-jre
            npm install
            ./node_modules/serverless/bin/serverless dynamodb install
            sudo apt-get install libxss1

      - run:
          name: Run linting
          command: npm run lint

      - run:
          name: Run unit tests
          environment:
            GOV_NOTIFY_TEMPLATE_ID: x
            GOV_NOTIFY_API_KEY: x
            URL_PREFIX: localhost:3000
          command: npm run unit-test -- --ci

      - run:
          name: Run tests
          environment:
            CYPRESS_JWT_SECRET: my_secret
          command: |
            echo -e "/customer-document-uploads/SENTRY_DSN=my_sentry_dsn\n/common/hackney-jwt-secret=my_secret\n/common/customer-jwt-secret=my_secret\n/customer-document-uploads/evidence-store-token=${TEST_ES_TOKEN}\n/customer-document-uploads/dev-govnotify-api-key=x\n/customer-document-uploads/govnotify-template-id=x" >> .env
            npm run ci

      - persist_to_workspace:
          root: ~/repo
          paths: .

  deploy:
    executor: node
    parameters:
      stage_name:
        type: string
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Install serverless
          command: sudo npm i -g serverless
      - run:
          name: Npm prune
          command: npm prune --production
      - run:
          name: Set AWS credentials
          command: sls --provider aws --key ${AWS_ACCESS_KEY_ID} --secret ${AWS_SECRET_ACCESS_KEY} --profile docuploads
      - run:
          name: Deploy application
          command: sls deploy -s << parameters.stage_name >>

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          name: deploy-staging
          stage_name: staging
          filters:
            branches:
              only: master
          requires:
            - build
      - permit-deploy-production:
          type: approval
          requires:
            - deploy-staging
      - deploy:
          name: deploy-production
          stage_name: production
          requires:
            - permit-deploy-production
